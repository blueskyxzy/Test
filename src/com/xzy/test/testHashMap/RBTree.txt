红黑树（Red Black Tree） 是一种自平衡二叉查找树，是在计算机科学中用到的一种数据结构，典型的用途是实现关联数组。

性质1. 节点是红色或黑色。
性质2. 根节点是黑色。
性质3 每个叶节点（NIL节点，空节点）是黑色的。[注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]
性质4 每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点)
性质5. 从任一节点到其每个叶子的所有路径都包含相同数目的黑色节点

红黑树操作：左旋和右旋
    左旋中的“左”，意味着“被旋转的节点将变成一个左节点”。
    右旋中的“右”，意味着“被旋转的节点将变成一个右节点”。

红黑树操作：添加
    第一步: 将红黑树当作一颗二叉查找树，将节点插入。
    第二步：将插入的节点着色为"红色"
    第三步: 通过一系列的旋转或着色等操作，使之重新成为一颗红黑树。

红黑树操作：删除
    第一步：将红黑树当作一颗二叉查找树，将节点删除。
    第二步：通过"旋转和重新着色"等一系列来修正该树，使之重新成为一棵红黑树
